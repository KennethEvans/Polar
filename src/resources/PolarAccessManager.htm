<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="en-us">
<title>Polar Access Manager</title>
<body>
<h1 align="center"><img src="PolarAccessManager.32x32.png" alt="PolarAccessManager.32x32.png" width="64" height="64" align="middle"/>Polar Access Manager</h1>
<p>Polar Access  Manager is a Java application to retrieve resources from Polar Flow using the Polar AccessLink web service. This web service is described at <a href="https://www.polar.com/accesslink-api/#polar-accesslink-api">https://www.polar.com/accesslink-api/#polar-accesslink-api</a>. It is the definitive reference and should have the latest updates. There is a lot of information there that will not repeated here. The web service is designed to be used by a web client with potentially many users, but this application accesses it as a stand-alone application using HTTP requests and responses. A external browser is not needed. It is designed to be used to retrieve your own personal exercise data, primarily TCX and GPX files, from Polar Flow (<a href="https://flow.polar.com">https://flow.polar.com</a>).  There is only a single user, you.</p>
<p>The application has been developed and tested on Windows. Owing to the Java FX requirement (see below), it will require some additional effort to use it on other operating systems. See the Running topic below. </p>
<p>The key points are: </p>
<ul>
  <li>Go to&nbsp;<a href="https://admin.polaraccesslink.com/" target="_blank">https://admin.polaraccesslink.com/</a>&nbsp;and log in using your Polar Flow credentials or create new Flow account. You can later manage your client from this page. Use the &quot;Create a client&quot; item to fill in an application and get an OAuth2 clientID and secret, which are a password, referred to here as the access-code. These are necessary for most transactions with the web service. Both of these are stored in the Preferences as Base64-encoded values, which is not much security as they are easily decoded. This method of handling security is a tradeoff between convenience and security. It is not safe if others have access to your computer. The alternative would be to enter them each time. In any event the access-code is in the URL shown to the user (by AccessLink) when access is requested. There should be no security-related information stored in the Git repository. It is, however, in your Java Preference Store, the location of which varies depending on the operating system. </li>
  <br>
  <li>Request access from the user (you) using the Basic | Get Access menu item. This will bring up an internal web page where the user (you) must log in to Polar and authorize the application (also you). You will get a code which is used to get  a token. The token is for security and has a very long expiration date. If you delete the user, you will have to go through this step again.</li>
  <br>
  <li>Register the user using the Basic | Register User menu item. It will send a client-user-id and give you a polar-user-id.  The client-user-id is a name of your own choosing to identify this user (in case you had several users). Set it in Preferences. It is for use by the application, and does not seem to be used by Polar. The polar-user-id specifies where the data for that user is located. (It will be part of a URL that is used to get the data.) Both it and the token are necessary to access the user's data, and will be used for most requests. Once you have these two items, you should not have to do this again unless you delete the user. Also, these two items are obtained, the OAuth2 clientID and secret are not needed to get the data. They are all stored in Preferences.  </li>
  <br>
  <li>There are rate limits for using the service. They are very liberal and should not be a problem for personal use. You can see them from the Basic | Get Rate Limits menu item.</li>
  <br>
  <li>Typically data is retrieved by asking for a transaction ID. There are separate IDs for Exercises, Activities, and Physical Info. These IDs are good for 10 minutes. You are expected to commit the transaction after you have retrieved the data. After committing, those data will not ever be available again. (New data are only available for a month in any event.) In normal operation you would get the transaction ID, get the desired data, then commit the transaction. If you are not sure you want the data to disappear from AccessLink (not Polar Flow), then do not commit. If you do this you will probably not be able to get a new transaction ID for some time, usually minutes but sometimes as long as a day. (This seems because they only clear the ID during a clean-up phase, not when the data are no longer available. It is an inconvenience, especially when debugging or deciding what Preferences to use to get the results you want.) The application remembers the transaction IDs when it is stopped, so you can reuse them as long as they have not timed out. Otherwise you have to wait.</li>
  <br><li>The data is obtained from your account on Polar Flow (<a href="https://flow.polar.com">https://flow.polar.com</a>). The data remain on Polar Flow, and can be managed from your account as usual. This is only another way to get the [recent] data. It has the advantage that you can get all available data at once, whereas on Polar Flow you have to download one file at a time. The application also gives you ways to rename the TCX and GPX files, adding an Activity name and location, for example, and to make substitutions, such as &quot;Walking&quot; for &quot;Other Outdoor&quot;. This along with options for handling existing files is specified in Preferences. </li>
  <br>
  <li>All of the transactions are done by HTTP requests and responses. These are to different URLs and have different inputs and outputs. They return different HTTP success and error codes. In the application there is essentially a separate method for each type of HTTP transaction. You should use the documentation to see what success and error codes to expect for each kind of transaction and what they mean. In all cases the methods called and codes received, if they do not indicate success, will be printed to the console along with the text interpretation (e.g. 404 Not Found). Typically the method will indicate in the console whether it is successful or not, depending on the success code (or codes) expected for that method. The information obtained from the data received will be printed although not necessarily in the form received, which could be a file, JSON object, etc. </li>
</ul>
<h3>Interface</h3>
<p>There are menus at the top to do the various steps required by AccessLink, and there is a console at the bottom to show the resulting output. You can cut and paste from the console if you want to save anything. </p>
<h3>Requirements</h3>
<p> Polar Access Manager uses Java FX to provide a WebView browser for the user to get access to Polar Access. As of Java 11, Java FX is not included with Java. The version used here is obtained from <a href="https://openjfx.io/">https://openjfx.io/</a>. Owing to this requirement the application requires Java 11 or higher. Java 11 can be installed from <a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html">https://www.oracle.com/technetwork/java/javase/downloads/index.html</a>. It is suggested to define the environment variable JAVA_HOME to point to where it is installed (e.g. C:\Java\JDK64\jdk-11.0.5) and to add %JAVA_HOME%\bin to the PATH (e.g. C:\Java\JDK64\jdk-11.0.5\bin).</p>
<h3>Running</h3>
<p>For the release versions on GitHub, there will be a folder with everything needed. Just extract this to a directory somewhere (e.g. C:\Deploy\Polar Access Manager). Uninstall by deleting it. The folder will contain a shortcut to run the JAR file with the correct arguments. The shortcut will have to modified to replace the default &quot;C:\Deploy\Polar Access Manager&quot; with your location and to specify your path to Javaw. It may be possible to use this on other operating systems by replacing the Java FX directory with the correct one for that operating system, but this has not been tested nor verified. </p>
<h3><strong>File Menu </strong></h3>
<p><strong>Preferences</strong></p>
<p> Allows you to set Preferences. All of the Preferences have tool tips, which explain their use. There are buttons to &quot;Use Current&quot; (what is set in the application, not necessarily saved, before the Preferences dialog was invoked), &quot;Use Defaults&quot; (the default Preferences hard-coded in the application), &quot;Use Stored&quot; (what is currently saved in persistent storage), &quot;Save&quot; (save the values currently set in the Preferences Dialog to persistent storage), &quot;Set Current&quot; (use the values currently set in the Preferences Dialog in the application but don't save them), and &quot;Done&quot; (dismiss the Preferences dialog). Only the &quot;Done&quot; button closes the Preferences dialog.</p>
<p>Note that some of the preferences are marked as non-configurable. You might want to keep a record of the preferences in case they are lost for some reason or need to be moved to another computer. They can be re-entered manually in the Preferences. The exercise_transaction-id, activity-transaction-id, and physical-information-transacxtion-id are transient and do not need to be saved long-term. They are in Preferences in case Polar Access Manager is restarted before they time out and they have not been committed. </p>
<p>Note that some of these values should not be shared with others for security reasons. As long as you are on your own computer and others do not have access to it, it should be reasonably OK. Polar Access Manager has made a trade off between security and convenience. If this is not enough security, you need another solution. Note that the Base64-encoded OAuth2 clientID/secret (what is in Preferences) is shown to the user when he gets authorized, and so is not especially secure to start with. </p>
<h3>Basic Menu</h3>
<p><strong>Get Access</strong></p>
<p>This starts an internal browser where the user (you) can authorize this application (also you) to access your data. If successful, you will get a code which you use to get a security token. Note that getting access is a one time thing. After that you will get a token and a polar-user-id. They are all that is needed going forward. In particular the OAuth2 clientID and secret will not be needed again and the UI for the Java FX Web Viewer will not be needed. The application could be made more simple without the need to use Java FX if you have another way to get access. </p>
<p><strong>Register User</strong></p>
<p>Sends a client-user-id and gives you a polar-user-id.  The client-user-id is a name of your own choosing to identify this user (in case you had several users). Set it in Preferences. Your name is a good choice. It is for use by the application, and does not seem to be used by Polar. The polar-user-id specifies where the data for that user is located. (It will be part of a URL that is used to get the data.) Both it and the token are necessary to access the user's data, and will be used for most requests.</p>
<p><strong>Get User Information</strong></p>
<p>Gets basic information for the user, including the polar-user-id. </p>
<p><strong>Delete User</strong></p>
<p>Delete this user. This will invalidate the token, and you will no longer have access to this user's data. </p>
<p><strong>Get Rate Limits</strong></p>
<p>Gets the rate limits for transactions with Polar AccessLink. These are very liberal and should not be a problem. </p>
<p><strong>Get Available Data</strong></p>
<p>Returns a list of the available data. This may be Exercises, Activities, or Physical Information, whatever is available. </p>
<h3>Exercises</h3>
<p>This menu has items related to Exercises.</p>
<p><strong>Get Exercises Hash</strong></p>
<p>This allows you to get a list of exercises without using a transaction ID. </p>
<p><strong>Get Exercise Transaction ID</strong></p>
<p>Gets an exercise transaction ID. This ID is good for 10 minutes, and allows you to access the exercises. It may be some time, up to as long as a day, before you can get a new transaction ID after it expires. If the transaction ID is no longer valid or they have not reset it, you will get a 404 Not Found error. The only solution, assuming there is data available, is to wait. </p>
<p><strong>Get Exercise List</strong></p>
<p>Get a list of the URLs of the available exercises. You must get  a valid transaction ID first. This list is mostly valuable for debugging and understanding what is happening. </p>
<p><strong>Get Exercise Summaries</strong></p>
<p>Gets the exercise summaries. This option is self-contained and gets a transaction ID, then the list of exercises, and then  the actual exercises from the list. It does not commit the transaction. </p>
<p><strong>Get TCX and Convert to GPX</strong></p>
<p>In normal use this is the menu item used most. It gets the TCX  available exercises and generates a GPX file. It is stand-alone and gets a transaction ID, then the files. It does not commit the transaction. There are a number of options for overwriting and renaming these files during the processing, which you set in the Preferences. </p>
<p><strong></strong><strong>!!! Get TCX and GPX</strong></p>
<p>The !!! indicates to not use this item. It gets both the TCX and GPX files for the available exercises. The reason for the warning is that the GPX files from Polar Access have a number of problems: The times are not in UTC format as required by the GPX specification, and there is no heart rate data. It is also different from the GPX file you get if you download directly from Polar Flow. Use Get TCX and Convert to GPX, instead. This item is stand-alone and gets a transaction ID, then the files. It does not commit the transaction. There will be no GPX file if GPS was not used for the exercise. There are a number of options for overwriting and renaming these files during the processing, which you set in the Preferences. </p>
<p><strong>Commit Exercise Transaction</strong></p>
<p>This commits the transaction. Once committed the data will no longer be available in AccessLink ever. They expect you to commit the transaction, and doing so will keep you from processing the same items each time. Even if not committed, the data will no longer be available after about a month. See the AccessLink documentation for more and current information. </p>
<h3>Activities</h3>
<p>This menu has items related to Activities.</p>
<p><strong>Get Activity Transaction ID</strong></p>
<p>Gets an activity transaction ID. This ID is good for 10 minutes, and allows you to access the activities. It may be some time, up to as long as a day, before you can get a new transaction ID after it expires. If the transaction ID is no longer valid or they have not reset it, you will get a 404 Not Found error. The only solution, assuming there is data available, is to wait. </p>
<p><strong>Get Activity List</strong></p>
<p>Get a list of the URLs of the available activities. You must get  a valid transaction ID first. This list is mostly valuable for debugging and understanding what is happening. </p>
<p><strong>Get Activity Summaries</strong></p>
<p>Gets the activity summaries. This option is self-contained and gets a transaction ID, then the list of activities, and then  the actual activities from the list. It does not commit the transaction. </p>
<p><strong>Commit Activity Transaction</strong></p>
<p>This commits the transaction. Once committed the data will no longer be available in AccessLink ever. They expect you to commit the transaction, and doing so will keep you from processing the same items each time. Even if not committed, the data will no longer be available after about a month. See the AccessLink documentation for more and current information. </p>
<h3>Physical Info</h3>
<p>This menu has items related to Physical Information. The separate blocks of information are referred to here as physical information's. There may be more than one. </p>
<p><strong>Get Physical Info Transaction ID</strong></p>
<p>Gets a physical information transaction ID. This ID is good for 10 minutes, and allows you to access the physical information's. It may be some time, up to as long as a day, before you can get a new transaction ID after it expires. If the transaction ID is no longer valid or they have not reset it, you will get a 404 Not Found error. The only solution, assuming there is data available, is to wait. </p>
<p><strong>Get Physical Info List</strong></p>
<p>Get a list of the URLs of the available physical information's. You must get  a valid transaction ID first. This list is mostly valuable for debugging and understanding what is happening. </p>
<p><strong>Get Physical Info Summaries</strong></p>
<p>Gets the physical information summaries. This option is self-contained and gets a transaction ID, then the list of physical information's, and then  the actual physical information's from the list. It does not commit the transaction. </p>
<p><strong>Commit Physical Info Transaction</strong></p>
<p>This commits the transaction. Once committed the data will no longer be available in AccessLink ever. They expect you to commit the transaction, and doing so will keep you from processing the same items each time. Even if not committed, the data will no longer be available after about a month. See the AccessLink documentation for more and current information. </p>
<h3>TCX/GPX</h3>
<p>This menu has items that manage TCX and GPX files.</p>
<p><strong>Convert TCX to GPX.</strong></p>
<p>Creates a GPX file from a TCX file.</p>
<p><strong>Merge TCX and GPX to GPX</strong></p>
<p>Takes the heart rate information from the TCX file and adds it to the GPX file as a Garmin TrackpointExtensionsV2  extension to the GPX file format.</p>
<p><strong>Rename TCX and GPX</strong></p>
<p>The names of the files downloaded from  Polar Flow or through Polar AccessLink do not include the type of exercise or location. This option gives you a dialog for each TCX/GPX pair that gives you a chance to rename them using information in the TCX file. This information includes the type of exercise and a location from the Notes. For the Note to be available, you have to manually add a note with the location information when you save the exercise, or it can be added later in Polar Flow. There will be dialog boxes for each TCX file chosen that show you what will happen and allow you to abort or override the default choices. </p>
<p>The information added does not have to be a location, but can be anything you want. The words will be separated by underscores in the file name. It only uses the words up to the first period or 40 characters, whichever comes first. (This allows you to add additional information after a period besides the location.)</p>
<p>The same methods used in these dialogs are used, along with Preferences which specify what defaults, when downloading TCX/GPX files. In that case they are executed automatically. With this menu option you have more control. </p>
<h3>Help Menu</h3>
<p><strong>Overview</strong></p>
<p>Show the Overview (this page) in a dialog. Links will not work. </p>
<p><strong> Show Overview in A Browser </strong></p>
<p>Shows the Overview (this page) in the default browser.. </p>
<p><strong>About</strong></p>
<p>Shows information about this application.</p>
</body>
</html>
